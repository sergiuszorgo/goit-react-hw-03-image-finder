{"version":3,"sources":["components/Searchbar.js","services/fetchImages.js","components/Loader.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Button.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","state","value","onFormSubmit","e","preventDefault","props","inputChange","currentTarget","setState","className","onSubmit","this","type","onChange","autocomplete","autofocus","placeholder","Component","fetchImages","page","axios","get","loader","color","height","width","ImageGalleryItem","img","toggleModal","webformatURL","tags","src","alt","onClick","ImageGallery","images","map","id","Button","loadMore","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","handleBackdropClick","target","window","addEventListener","removeEventListener","largeImage","createPortal","largeImageURL","App","button","loadSpin","modal","then","data","hits","length","alert","catch","error","console","scrollTo","top","documentElement","scrollHeight","behavior","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9af4ab62.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onFormSubmit(this.state.value);\r\n  };\r\n  inputChange = (e) => {\r\n    const { currentTarget } = e;\r\n    this.setState({ value: currentTarget.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.onFormSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            onChange={this.inputChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImages = (value, page) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${value}&page=${page}&key=19813353-ad59abac9068a994c96bcb173&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n};\r\n\r\nexport default fetchImages;\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nconst loader = () => {\r\n  return (\r\n    <Loader\r\n      className=\"loader\"\r\n      type=\"Bars\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\nexport default loader;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({ img, toggleModal }) => {\r\n  const { webformatURL, tags } = img;\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => toggleModal(img)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  img: PropTypes.node,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, toggleModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((img) => (\r\n        <ImageGalleryItem key={img.id} img={img} toggleModal={toggleModal} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  toggleModal: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <div className=\"divButton\">\r\n      <button className=\"Button\" onClick={loadMore}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  // нажатие ESC\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n  // клик по бекдропу\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.toggleModal();\r\n    }\r\n  };\r\n  render() {\r\n    const { largeImage } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={largeImage.largeImageURL} alt={largeImage.tags} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar\";\nimport fetchImages from \"./services/fetchImages\";\nimport Loader from \"./components/Loader\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    images: [],\n    page: 1,\n    button: true,\n    loadSpin: false,\n    modal: false,\n    largeImage: {},\n  };\n  componentDidUpdate() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  onFormSubmit = (value) => {\n    if (value) {\n      this.setState({ loadSpin: true });\n      fetchImages(value, 1)\n        .then(({ data }) => data.hits)\n        .then((data) => {\n          if (data.length === 0) {\n            alert(\"Ooops - Nothing found\");\n            this.setState({ loadSpin: false });\n          } else {\n            this.setState({\n              images: data,\n              value: value,\n              page: 2,\n              loadSpin: false,\n            });\n          }\n        })\n        .catch((error) => console.error({ error }));\n    } else {\n      alert(\"There is no data\");\n    }\n  };\n  // подгрузка изображений по кнопке\n  loadMore = () => {\n    const { images, value, page } = this.state;\n    this.setState({ loadSpin: true });\n    fetchImages(value, page)\n      .then(({ data }) => data.hits)\n      .then((data) =>\n        this.setState({\n          images: [...images, ...data],\n          loadSpin: false,\n          button: data.length,\n        })\n      );\n    this.setState((state) => {\n      return { page: page + 1 };\n    });\n  };\n  // ВКЛ-ВЫКЛ Модалки\n  toggleModal = (img) => {\n    const { modal } = this.state;\n    img\n      ? this.setState({ modal: !modal, largeImage: img })\n      : this.setState({ modal: !modal });\n  };\n\n  render() {\n    return (\n      <div>\n        <Searchbar onFormSubmit={this.onFormSubmit} />\n        <ImageGallery\n          images={this.state.images}\n          toggleModal={this.toggleModal}\n        />\n        {this.state.images.length >= 12 && this.state.button && (\n          <Button loadMore={this.loadMore} />\n        )}\n        {this.state.loadSpin && <Loader />}\n        {this.state.modal && (\n          <Modal\n            toggleModal={this.toggleModal}\n            largeImage={this.state.largeImage}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}